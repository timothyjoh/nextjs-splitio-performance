{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\nimport { SplitProvider, SplitClient } from \"react-splitio\";\nimport nookies from \"nookies\";\nimport nanoid from \"nanoid\";\nvar ANON_COOKIE_KEY = \"leafly_anon\";\nexport var anonymousCookie = function anonymousCookie(ctx) {\n  var anon = nookies.get(ctx)[ANON_COOKIE_KEY];\n\n  if (!anon) {\n    anon = nanoid();\n    nookies.set(ctx, ANON_COOKIE_KEY, anon, {\n      maxAge: 60 * 24 * 60 * 60,\n      path: \"/\",\n      sameSite: \"strict\"\n    });\n  }\n\n  return anon;\n};\n\nvar NewSplitProvider = function NewSplitProvider(_ref) {\n  var trafficType = _ref.trafficType,\n      splitKey = _ref.splitKey,\n      children = _ref.children;\n  var config = useMemo(function () {\n    return {\n      core: {\n        authorizationKey: 'js604eki2au6d26oetgbj33jfi1t3i3dh4ov',\n        trafficType: trafficType,\n        labelsEnabled: true\n      },\n      startup: {\n        requestTimeoutBeforeReady: 800,\n        // 800ms\n        retriesOnFailureBeforeReady: 5,\n        // 1 sec\n        readyTimeout: 1.5,\n        // 1.5 sec\n        eventsFirstPushWindow: 10 // 10 sec\n\n      },\n      scheduler: {\n        featuresRefreshRate: 30,\n        // 30 sec\n        segmentsRefreshRate: 60,\n        // 60 sec\n        metricsRefreshRate: 60,\n        // 60 sec\n        impressionsRefreshRate: 60,\n        // 60 sec\n        eventsPushRate: 15,\n        // 60 sec\n        eventsQueueSize: 500 // 500 items\n\n      }\n    };\n  }, [trafficType]);\n  return __jsx(SplitProvider, {\n    config: config\n  }, __jsx(SplitClient, {\n    splitKey: splitKey || anonymousCookie()\n  }, children));\n};\n\nexport default NewSplitProvider;","map":null,"metadata":{},"sourceType":"module"}